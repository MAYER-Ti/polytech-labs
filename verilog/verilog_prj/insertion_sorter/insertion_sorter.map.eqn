-- Copyright (C) 1991-2005 Altera Corporation
-- Your use of Altera Corporation's design tools, logic functions 
-- and other software and tools, and its AMPP partner logic 
-- functions, and any output files any of the foregoing 
-- (including device programming or simulation files), and any 
-- associated documentation or information are expressly subject 
-- to the terms and conditions of the Altera Program License 
-- Subscription Agreement, Altera MegaCore Function License 
-- Agreement, or other applicable license agreement, including, 
-- without limitation, that your use is for the sole purpose of 
-- programming logic devices manufactured by Altera and sold by 
-- Altera or its authorized distributors.  Please refer to the 
-- applicable agreement for further details.
--A1L591Q is done~reg0
--operation mode is normal

A1L591Q_lut_out = A1L132Q # A1L591Q & (!start);
A1L591Q = DFFEAS(A1L591Q_lut_out, clk, !reset, , A1L1, , , , );


--A1L821Q is data_out_0[0]~reg0
--operation mode is normal

A1L821Q_lut_out = array[0][0];
A1L821Q = DFFEAS(A1L821Q_lut_out, clk, !reset, , A1L2, , , , );


--A1L031Q is data_out_0[1]~reg0
--operation mode is normal

A1L031Q_lut_out = array[0][1];
A1L031Q = DFFEAS(A1L031Q_lut_out, clk, !reset, , A1L2, , , , );


--A1L231Q is data_out_0[2]~reg0
--operation mode is normal

A1L231Q_lut_out = array[0][2];
A1L231Q = DFFEAS(A1L231Q_lut_out, clk, !reset, , A1L2, , , , );


--A1L431Q is data_out_0[3]~reg0
--operation mode is normal

A1L431Q_lut_out = array[0][3];
A1L431Q = DFFEAS(A1L431Q_lut_out, clk, !reset, , A1L2, , , , );


--A1L631Q is data_out_0[4]~reg0
--operation mode is normal

A1L631Q_lut_out = array[0][4];
A1L631Q = DFFEAS(A1L631Q_lut_out, clk, !reset, , A1L2, , , , );


--A1L831Q is data_out_0[5]~reg0
--operation mode is normal

A1L831Q_lut_out = array[0][5];
A1L831Q = DFFEAS(A1L831Q_lut_out, clk, !reset, , A1L2, , , , );


--A1L041Q is data_out_0[6]~reg0
--operation mode is normal

A1L041Q_lut_out = array[0][6];
A1L041Q = DFFEAS(A1L041Q_lut_out, clk, !reset, , A1L2, , , , );


--A1L241Q is data_out_0[7]~reg0
--operation mode is normal

A1L241Q_lut_out = array[0][7];
A1L241Q = DFFEAS(A1L241Q_lut_out, clk, !reset, , A1L2, , , , );


--A1L541Q is data_out_1[0]~reg0
--operation mode is normal

A1L541Q_lut_out = array[1][0];
A1L541Q = DFFEAS(A1L541Q_lut_out, clk, !reset, , A1L2, , , , );


--A1L741Q is data_out_1[1]~reg0
--operation mode is normal

A1L741Q_lut_out = array[1][1];
A1L741Q = DFFEAS(A1L741Q_lut_out, clk, !reset, , A1L2, , , , );


--A1L941Q is data_out_1[2]~reg0
--operation mode is normal

A1L941Q_lut_out = array[1][2];
A1L941Q = DFFEAS(A1L941Q_lut_out, clk, !reset, , A1L2, , , , );


--A1L151Q is data_out_1[3]~reg0
--operation mode is normal

A1L151Q_lut_out = array[1][3];
A1L151Q = DFFEAS(A1L151Q_lut_out, clk, !reset, , A1L2, , , , );


--A1L351Q is data_out_1[4]~reg0
--operation mode is normal

A1L351Q_lut_out = array[1][4];
A1L351Q = DFFEAS(A1L351Q_lut_out, clk, !reset, , A1L2, , , , );


--A1L551Q is data_out_1[5]~reg0
--operation mode is normal

A1L551Q_lut_out = array[1][5];
A1L551Q = DFFEAS(A1L551Q_lut_out, clk, !reset, , A1L2, , , , );


--A1L751Q is data_out_1[6]~reg0
--operation mode is normal

A1L751Q_lut_out = array[1][6];
A1L751Q = DFFEAS(A1L751Q_lut_out, clk, !reset, , A1L2, , , , );


--A1L951Q is data_out_1[7]~reg0
--operation mode is normal

A1L951Q_lut_out = array[1][7];
A1L951Q = DFFEAS(A1L951Q_lut_out, clk, !reset, , A1L2, , , , );


--A1L261Q is data_out_2[0]~reg0
--operation mode is normal

A1L261Q_lut_out = array[2][0];
A1L261Q = DFFEAS(A1L261Q_lut_out, clk, !reset, , A1L2, , , , );


--A1L461Q is data_out_2[1]~reg0
--operation mode is normal

A1L461Q_lut_out = array[2][1];
A1L461Q = DFFEAS(A1L461Q_lut_out, clk, !reset, , A1L2, , , , );


--A1L661Q is data_out_2[2]~reg0
--operation mode is normal

A1L661Q_lut_out = array[2][2];
A1L661Q = DFFEAS(A1L661Q_lut_out, clk, !reset, , A1L2, , , , );


--A1L861Q is data_out_2[3]~reg0
--operation mode is normal

A1L861Q_lut_out = array[2][3];
A1L861Q = DFFEAS(A1L861Q_lut_out, clk, !reset, , A1L2, , , , );


--A1L071Q is data_out_2[4]~reg0
--operation mode is normal

A1L071Q_lut_out = array[2][4];
A1L071Q = DFFEAS(A1L071Q_lut_out, clk, !reset, , A1L2, , , , );


--A1L271Q is data_out_2[5]~reg0
--operation mode is normal

A1L271Q_lut_out = array[2][5];
A1L271Q = DFFEAS(A1L271Q_lut_out, clk, !reset, , A1L2, , , , );


--A1L471Q is data_out_2[6]~reg0
--operation mode is normal

A1L471Q_lut_out = array[2][6];
A1L471Q = DFFEAS(A1L471Q_lut_out, clk, !reset, , A1L2, , , , );


--A1L671Q is data_out_2[7]~reg0
--operation mode is normal

A1L671Q_lut_out = array[2][7];
A1L671Q = DFFEAS(A1L671Q_lut_out, clk, !reset, , A1L2, , , , );


--A1L971Q is data_out_3[0]~reg0
--operation mode is normal

A1L971Q_lut_out = array[3][0];
A1L971Q = DFFEAS(A1L971Q_lut_out, clk, !reset, , A1L2, , , , );


--A1L181Q is data_out_3[1]~reg0
--operation mode is normal

A1L181Q_lut_out = array[3][1];
A1L181Q = DFFEAS(A1L181Q_lut_out, clk, !reset, , A1L2, , , , );


--A1L381Q is data_out_3[2]~reg0
--operation mode is normal

A1L381Q_lut_out = array[3][2];
A1L381Q = DFFEAS(A1L381Q_lut_out, clk, !reset, , A1L2, , , , );


--A1L581Q is data_out_3[3]~reg0
--operation mode is normal

A1L581Q_lut_out = array[3][3];
A1L581Q = DFFEAS(A1L581Q_lut_out, clk, !reset, , A1L2, , , , );


--A1L781Q is data_out_3[4]~reg0
--operation mode is normal

A1L781Q_lut_out = array[3][4];
A1L781Q = DFFEAS(A1L781Q_lut_out, clk, !reset, , A1L2, , , , );


--A1L981Q is data_out_3[5]~reg0
--operation mode is normal

A1L981Q_lut_out = array[3][5];
A1L981Q = DFFEAS(A1L981Q_lut_out, clk, !reset, , A1L2, , , , );


--A1L191Q is data_out_3[6]~reg0
--operation mode is normal

A1L191Q_lut_out = array[3][6];
A1L191Q = DFFEAS(A1L191Q_lut_out, clk, !reset, , A1L2, , , , );


--A1L391Q is data_out_3[7]~reg0
--operation mode is normal

A1L391Q_lut_out = array[3][7];
A1L391Q = DFFEAS(A1L391Q_lut_out, clk, !reset, , A1L2, , , , );


--A1L132Q is state[2]~reg0
--operation mode is normal

A1L132Q_lut_out = A1L722Q & !A1L132Q & A1L922Q & A1L63;
A1L132Q = DFFEAS(A1L132Q_lut_out, clk, !reset, , , , , , );


--A1L722Q is state[0]~reg0
--operation mode is normal

A1L722Q_lut_out = A1L73 # A1L922Q & !A1L132Q & A1L04;
A1L722Q = DFFEAS(A1L722Q_lut_out, clk, !reset, , , , , , );


--A1L922Q is state[1]~reg0
--operation mode is normal

A1L922Q_lut_out = !A1L132Q & (A1L722Q & (!A1L63 # !A1L922Q) # !A1L722Q & A1L922Q);
A1L922Q = DFFEAS(A1L922Q_lut_out, clk, !reset, , , , , , );


--A1L1 is Decoder~66
--operation mode is normal

A1L1 = !A1L722Q & !A1L922Q;


--A1L34 is array[0][0]~COMBOUT
--operation mode is normal

A1L34 = A1L04 & (A1L02) # !A1L04 & key[0];

--array[0][0] is array[0][0]
--operation mode is normal

array[0][0] = DFFEAS(A1L34, clk, !reset, , A1L75, data_in_0[0], , , !A1L922Q);


--A1L2 is Decoder~67
--operation mode is normal

A1L2 = A1L132Q & (!A1L722Q & !A1L922Q);


--A1L54 is array[0][1]~COMBOUT
--operation mode is normal

A1L54 = A1L04 & (A1L22) # !A1L04 & key[1];

--array[0][1] is array[0][1]
--operation mode is normal

array[0][1] = DFFEAS(A1L54, clk, !reset, , A1L75, data_in_0[1], , , !A1L922Q);


--A1L74 is array[0][2]~COMBOUT
--operation mode is normal

A1L74 = A1L04 & (A1L42) # !A1L04 & key[2];

--array[0][2] is array[0][2]
--operation mode is normal

array[0][2] = DFFEAS(A1L74, clk, !reset, , A1L75, data_in_0[2], , , !A1L922Q);


--A1L94 is array[0][3]~COMBOUT
--operation mode is normal

A1L94 = A1L04 & (A1L62) # !A1L04 & key[3];

--array[0][3] is array[0][3]
--operation mode is normal

array[0][3] = DFFEAS(A1L94, clk, !reset, , A1L75, data_in_0[3], , , !A1L922Q);


--A1L15 is array[0][4]~COMBOUT
--operation mode is normal

A1L15 = A1L04 & (A1L82) # !A1L04 & key[4];

--array[0][4] is array[0][4]
--operation mode is normal

array[0][4] = DFFEAS(A1L15, clk, !reset, , A1L75, data_in_0[4], , , !A1L922Q);


--A1L35 is array[0][5]~COMBOUT
--operation mode is normal

A1L35 = A1L04 & (A1L03) # !A1L04 & key[5];

--array[0][5] is array[0][5]
--operation mode is normal

array[0][5] = DFFEAS(A1L35, clk, !reset, , A1L75, data_in_0[5], , , !A1L922Q);


--A1L55 is array[0][6]~COMBOUT
--operation mode is normal

A1L55 = A1L04 & (A1L23) # !A1L04 & key[6];

--array[0][6] is array[0][6]
--operation mode is normal

array[0][6] = DFFEAS(A1L55, clk, !reset, , A1L75, data_in_0[6], , , !A1L922Q);


--A1L85 is array[0][7]~COMBOUT
--operation mode is normal

A1L85 = A1L04 & (A1L43) # !A1L04 & key[7];

--array[0][7] is array[0][7]
--operation mode is normal

array[0][7] = DFFEAS(A1L85, clk, !reset, , A1L75, data_in_0[7], , , !A1L922Q);


--array[1][0] is array[1][0]
--operation mode is normal

array[1][0]_lut_out = A1L922Q & A1L34 # !A1L922Q & (data_in_1[0]);
array[1][0] = DFFEAS(array[1][0]_lut_out, clk, !reset, , A1L16, , , , );


--array[1][1] is array[1][1]
--operation mode is normal

array[1][1]_lut_out = A1L922Q & A1L54 # !A1L922Q & (data_in_1[1]);
array[1][1] = DFFEAS(array[1][1]_lut_out, clk, !reset, , A1L16, , , , );


--array[1][2] is array[1][2]
--operation mode is normal

array[1][2]_lut_out = A1L922Q & A1L74 # !A1L922Q & (data_in_1[2]);
array[1][2] = DFFEAS(array[1][2]_lut_out, clk, !reset, , A1L16, , , , );


--array[1][3] is array[1][3]
--operation mode is normal

array[1][3]_lut_out = A1L922Q & A1L94 # !A1L922Q & (data_in_1[3]);
array[1][3] = DFFEAS(array[1][3]_lut_out, clk, !reset, , A1L16, , , , );


--array[1][4] is array[1][4]
--operation mode is normal

array[1][4]_lut_out = A1L922Q & A1L15 # !A1L922Q & (data_in_1[4]);
array[1][4] = DFFEAS(array[1][4]_lut_out, clk, !reset, , A1L16, , , , );


--array[1][5] is array[1][5]
--operation mode is normal

array[1][5]_lut_out = A1L922Q & A1L35 # !A1L922Q & (data_in_1[5]);
array[1][5] = DFFEAS(array[1][5]_lut_out, clk, !reset, , A1L16, , , , );


--array[1][6] is array[1][6]
--operation mode is normal

array[1][6]_lut_out = A1L922Q & A1L55 # !A1L922Q & (data_in_1[6]);
array[1][6] = DFFEAS(array[1][6]_lut_out, clk, !reset, , A1L16, , , , );


--array[1][7] is array[1][7]
--operation mode is normal

array[1][7]_lut_out = A1L922Q & A1L85 # !A1L922Q & (data_in_1[7]);
array[1][7] = DFFEAS(array[1][7]_lut_out, clk, !reset, , A1L16, , , , );


--array[2][0] is array[2][0]
--operation mode is normal

array[2][0]_lut_out = A1L922Q & A1L34 # !A1L922Q & (data_in_2[0]);
array[2][0] = DFFEAS(array[2][0]_lut_out, clk, !reset, , A1L87, , , , );


--array[2][1] is array[2][1]
--operation mode is normal

array[2][1]_lut_out = A1L922Q & A1L54 # !A1L922Q & (data_in_2[1]);
array[2][1] = DFFEAS(array[2][1]_lut_out, clk, !reset, , A1L87, , , , );


--array[2][2] is array[2][2]
--operation mode is normal

array[2][2]_lut_out = A1L922Q & A1L74 # !A1L922Q & (data_in_2[2]);
array[2][2] = DFFEAS(array[2][2]_lut_out, clk, !reset, , A1L87, , , , );


--array[2][3] is array[2][3]
--operation mode is normal

array[2][3]_lut_out = A1L922Q & A1L94 # !A1L922Q & (data_in_2[3]);
array[2][3] = DFFEAS(array[2][3]_lut_out, clk, !reset, , A1L87, , , , );


--array[2][4] is array[2][4]
--operation mode is normal

array[2][4]_lut_out = A1L922Q & A1L15 # !A1L922Q & (data_in_2[4]);
array[2][4] = DFFEAS(array[2][4]_lut_out, clk, !reset, , A1L87, , , , );


--array[2][5] is array[2][5]
--operation mode is normal

array[2][5]_lut_out = A1L922Q & A1L35 # !A1L922Q & (data_in_2[5]);
array[2][5] = DFFEAS(array[2][5]_lut_out, clk, !reset, , A1L87, , , , );


--array[2][6] is array[2][6]
--operation mode is normal

array[2][6]_lut_out = A1L922Q & A1L55 # !A1L922Q & (data_in_2[6]);
array[2][6] = DFFEAS(array[2][6]_lut_out, clk, !reset, , A1L87, , , , );


--array[2][7] is array[2][7]
--operation mode is normal

array[2][7]_lut_out = A1L922Q & A1L85 # !A1L922Q & (data_in_2[7]);
array[2][7] = DFFEAS(array[2][7]_lut_out, clk, !reset, , A1L87, , , , );


--array[3][0] is array[3][0]
--operation mode is normal

array[3][0]_lut_out = A1L922Q & A1L34 # !A1L922Q & (data_in_3[0]);
array[3][0] = DFFEAS(array[3][0]_lut_out, clk, !reset, , A1L18, , , , );


--array[3][1] is array[3][1]
--operation mode is normal

array[3][1]_lut_out = A1L922Q & A1L54 # !A1L922Q & (data_in_3[1]);
array[3][1] = DFFEAS(array[3][1]_lut_out, clk, !reset, , A1L18, , , , );


--array[3][2] is array[3][2]
--operation mode is normal

array[3][2]_lut_out = A1L922Q & A1L74 # !A1L922Q & (data_in_3[2]);
array[3][2] = DFFEAS(array[3][2]_lut_out, clk, !reset, , A1L18, , , , );


--array[3][3] is array[3][3]
--operation mode is normal

array[3][3]_lut_out = A1L922Q & A1L94 # !A1L922Q & (data_in_3[3]);
array[3][3] = DFFEAS(array[3][3]_lut_out, clk, !reset, , A1L18, , , , );


--array[3][4] is array[3][4]
--operation mode is normal

array[3][4]_lut_out = A1L922Q & A1L15 # !A1L922Q & (data_in_3[4]);
array[3][4] = DFFEAS(array[3][4]_lut_out, clk, !reset, , A1L18, , , , );


--array[3][5] is array[3][5]
--operation mode is normal

array[3][5]_lut_out = A1L922Q & A1L35 # !A1L922Q & (data_in_3[5]);
array[3][5] = DFFEAS(array[3][5]_lut_out, clk, !reset, , A1L18, , , , );


--array[3][6] is array[3][6]
--operation mode is normal

array[3][6]_lut_out = A1L922Q & A1L55 # !A1L922Q & (data_in_3[6]);
array[3][6] = DFFEAS(array[3][6]_lut_out, clk, !reset, , A1L18, , , , );


--array[3][7] is array[3][7]
--operation mode is normal

array[3][7]_lut_out = A1L922Q & A1L85 # !A1L922Q & (data_in_3[7]);
array[3][7] = DFFEAS(array[3][7]_lut_out, clk, !reset, , A1L18, , , , );


--A1L3 is Decoder~68
--operation mode is normal

A1L3 = A1L722Q & (!A1L132Q);


--i[1] is i[1]
--operation mode is normal

i[1]_lut_out = i[1] # i[0];
i[1] = DFFEAS(i[1]_lut_out, clk, VCC, , A1L991, , , !A1L922Q, );


--i[0] is i[0]
--operation mode is normal

i[0]_lut_out = i[1] # !i[0];
i[0] = DFFEAS(i[0]_lut_out, clk, VCC, , A1L991, VCC, , , !A1L922Q);


--A1L53 is Select~1049
--operation mode is normal

A1L53 = i[1] & i[0] & (start # !A1L1);


--A1L4 is LessThan~105
--operation mode is normal

A1L4_carry_eqn = A1L6;
A1L4 = key[7] & A1L43 & A1L4_carry_eqn # !key[7] & (A1L43 # A1L4_carry_eqn);


--j[1] is j[1]
--operation mode is normal

j[1]_lut_out = A1L302 & j[1] # !A1L302 & (A1L83 $ !A1L93);
j[1] = DFFEAS(j[1]_lut_out, clk, VCC, , , , , , );


--j[0] is j[0]
--operation mode is normal

j[0]_lut_out = A1L302 & j[0] # !A1L302 & (!A1L83);
j[0] = DFFEAS(j[0]_lut_out, clk, VCC, , , , , , );


--A1L04 is always0~101
--operation mode is normal

A1L04 = A1L4 & (!j[0] # !j[1]);


--A1L63 is Select~1050
--operation mode is normal

A1L63 = A1L53 & (!A1L04 # !A1L922Q # !A1L722Q);


--A1L73 is Select~1051
--operation mode is normal

A1L73 = !A1L132Q & !A1L722Q & (start # A1L922Q);


--A1L412 is key[7]~130
--operation mode is normal

A1L412 = A1L922Q & (!A1L132Q);


--key[0] is key[0]
--operation mode is normal

key[0]_lut_out = i[0] & (A1L512 & (array[3][0]) # !A1L512 & array[1][0]) # !i[0] & (A1L512);
key[0] = DFFEAS(key[0]_lut_out, clk, VCC, , A1L312, , , , );


--A1L91 is Mux~164
--operation mode is normal

A1L91 = j[1] & (j[0]) # !j[1] & (j[0] & array[1][0] # !j[0] & (array[0][0]));


--A1L02 is Mux~165
--operation mode is normal

A1L02 = j[1] & (A1L91 & (array[3][0]) # !A1L91 & array[2][0]) # !j[1] & (A1L91);


--A1L75 is array[0][7]~380
--operation mode is normal

A1L75 = A1L3 & (j[1] & j[0] # !A1L922Q);


--key[1] is key[1]
--operation mode is normal

key[1]_lut_out = i[1] & (A1L612 & (array[3][1]) # !A1L612 & array[2][1]) # !i[1] & (A1L612);
key[1] = DFFEAS(key[1]_lut_out, clk, VCC, , A1L312, , , , );


--A1L12 is Mux~166
--operation mode is normal

A1L12 = j[1] & (j[0]) # !j[1] & (j[0] & array[1][1] # !j[0] & (array[0][1]));


--A1L22 is Mux~167
--operation mode is normal

A1L22 = j[1] & (A1L12 & (array[3][1]) # !A1L12 & array[2][1]) # !j[1] & (A1L12);


--key[2] is key[2]
--operation mode is normal

key[2]_lut_out = i[0] & (A1L712 & (array[3][2]) # !A1L712 & array[1][2]) # !i[0] & (A1L712);
key[2] = DFFEAS(key[2]_lut_out, clk, VCC, , A1L312, , , , );


--A1L32 is Mux~168
--operation mode is normal

A1L32 = j[1] & (j[0]) # !j[1] & (j[0] & array[1][2] # !j[0] & (array[0][2]));


--A1L42 is Mux~169
--operation mode is normal

A1L42 = j[1] & (A1L32 & (array[3][2]) # !A1L32 & array[2][2]) # !j[1] & (A1L32);


--key[3] is key[3]
--operation mode is normal

key[3]_lut_out = i[1] & (A1L812 & (array[3][3]) # !A1L812 & array[2][3]) # !i[1] & (A1L812);
key[3] = DFFEAS(key[3]_lut_out, clk, VCC, , A1L312, , , , );


--A1L52 is Mux~170
--operation mode is normal

A1L52 = j[1] & (j[0]) # !j[1] & (j[0] & array[1][3] # !j[0] & (array[0][3]));


--A1L62 is Mux~171
--operation mode is normal

A1L62 = j[1] & (A1L52 & (array[3][3]) # !A1L52 & array[2][3]) # !j[1] & (A1L52);


--key[4] is key[4]
--operation mode is normal

key[4]_lut_out = i[0] & (A1L912 & (array[3][4]) # !A1L912 & array[1][4]) # !i[0] & (A1L912);
key[4] = DFFEAS(key[4]_lut_out, clk, VCC, , A1L312, , , , );


--A1L72 is Mux~172
--operation mode is normal

A1L72 = j[0] & (j[1]) # !j[0] & (j[1] & array[2][4] # !j[1] & (array[0][4]));


--A1L82 is Mux~173
--operation mode is normal

A1L82 = j[0] & (A1L72 & (array[3][4]) # !A1L72 & array[1][4]) # !j[0] & (A1L72);


--key[5] is key[5]
--operation mode is normal

key[5]_lut_out = i[1] & (A1L022 & (array[3][5]) # !A1L022 & array[2][5]) # !i[1] & (A1L022);
key[5] = DFFEAS(key[5]_lut_out, clk, VCC, , A1L312, , , , );


--A1L92 is Mux~174
--operation mode is normal

A1L92 = j[1] & (j[0]) # !j[1] & (j[0] & array[1][5] # !j[0] & (array[0][5]));


--A1L03 is Mux~175
--operation mode is normal

A1L03 = j[1] & (A1L92 & (array[3][5]) # !A1L92 & array[2][5]) # !j[1] & (A1L92);


--key[6] is key[6]
--operation mode is normal

key[6]_lut_out = i[0] & (A1L122 & (array[3][6]) # !A1L122 & array[1][6]) # !i[0] & (A1L122);
key[6] = DFFEAS(key[6]_lut_out, clk, VCC, , A1L312, , , , );


--A1L13 is Mux~176
--operation mode is normal

A1L13 = j[0] & (j[1]) # !j[0] & (j[1] & array[2][6] # !j[1] & (array[0][6]));


--A1L23 is Mux~177
--operation mode is normal

A1L23 = j[0] & (A1L13 & (array[3][6]) # !A1L13 & array[1][6]) # !j[0] & (A1L13);


--key[7] is key[7]
--operation mode is normal

key[7]_lut_out = i[1] & (A1L222 & (array[3][7]) # !A1L222 & array[2][7]) # !i[1] & (A1L222);
key[7] = DFFEAS(key[7]_lut_out, clk, VCC, , A1L312, , , , );


--A1L33 is Mux~178
--operation mode is normal

A1L33 = j[1] & (j[0]) # !j[1] & (j[0] & array[1][7] # !j[0] & (array[0][7]));


--A1L43 is Mux~179
--operation mode is normal

A1L43 = j[1] & (A1L33 & (array[3][7]) # !A1L33 & array[2][7]) # !j[1] & (A1L33);


--A1L16 is array[1][0]~381
--operation mode is normal

A1L16 = A1L3 & (!j[1] & !j[0] # !A1L922Q);


--A1L87 is array[2][7]~382
--operation mode is normal

A1L87 = A1L3 & (!j[1] & j[0] # !A1L922Q);


--A1L18 is array[3][0]~383
--operation mode is normal

A1L18 = A1L3 & (!j[0] & j[1] # !A1L922Q);


--A1L991 is i[1]~70
--operation mode is normal

A1L991 = !reset & A1L3 & (!A1L04 # !A1L922Q);


--A1L6 is LessThan~112
--operation mode is arithmetic

A1L6 = CARRY(key[6] & A1L23 & !A1L8 # !key[6] & (A1L23 # !A1L8));


--A1L83 is add~358
--operation mode is normal

A1L83 = A1L922Q & (A1L3 & j[0] # !A1L3 & (i[0])) # !A1L922Q & (i[0]);


--A1L93 is add~359
--operation mode is normal

A1L93 = A1L922Q & (A1L3 & j[1] # !A1L3 & (i[1])) # !A1L922Q & (i[1]);


--A1L302 is j[1]~415
--operation mode is normal

A1L302 = reset # A1L722Q & !A1L04 # !A1L412;


--A1L512 is key~131
--operation mode is normal

A1L512 = i[0] & (i[1]) # !i[0] & (i[1] & array[2][0] # !i[1] & (array[0][0]));


--A1L312 is key[7]~8
--operation mode is normal

A1L312 = A1L922Q & !A1L132Q & !reset & !A1L722Q;


--A1L612 is key~133
--operation mode is normal

A1L612 = i[1] & (i[0]) # !i[1] & (i[0] & array[1][1] # !i[0] & (array[0][1]));


--A1L712 is key~135
--operation mode is normal

A1L712 = i[0] & (i[1]) # !i[0] & (i[1] & array[2][2] # !i[1] & (array[0][2]));


--A1L812 is key~137
--operation mode is normal

A1L812 = i[1] & (i[0]) # !i[1] & (i[0] & array[1][3] # !i[0] & (array[0][3]));


--A1L912 is key~139
--operation mode is normal

A1L912 = i[0] & (i[1]) # !i[0] & (i[1] & array[2][4] # !i[1] & (array[0][4]));


--A1L022 is key~141
--operation mode is normal

A1L022 = i[1] & (i[0]) # !i[1] & (i[0] & array[1][5] # !i[0] & (array[0][5]));


--A1L122 is key~143
--operation mode is normal

A1L122 = i[0] & (i[1]) # !i[0] & (i[1] & array[2][6] # !i[1] & (array[0][6]));


--A1L222 is key~145
--operation mode is normal

A1L222 = i[1] & (i[0]) # !i[1] & (i[0] & array[1][7] # !i[0] & (array[0][7]));


--A1L8 is LessThan~117
--operation mode is arithmetic

A1L8 = CARRY(key[5] & (!A1L01 # !A1L03) # !key[5] & !A1L03 & !A1L01);


--A1L01 is LessThan~122
--operation mode is arithmetic

A1L01 = CARRY(key[4] & A1L82 & !A1L21 # !key[4] & (A1L82 # !A1L21));


--A1L21 is LessThan~127
--operation mode is arithmetic

A1L21 = CARRY(key[3] & (!A1L41 # !A1L62) # !key[3] & !A1L62 & !A1L41);


--A1L41 is LessThan~132
--operation mode is arithmetic

A1L41 = CARRY(key[2] & A1L42 & !A1L61 # !key[2] & (A1L42 # !A1L61));


--A1L61 is LessThan~137
--operation mode is arithmetic

A1L61 = CARRY(key[1] & (!A1L81 # !A1L22) # !key[1] & !A1L22 & !A1L81);


--A1L81 is LessThan~142
--operation mode is arithmetic

A1L81 = CARRY(!key[0] & A1L02);


--start is start
--operation mode is input

start = INPUT();


--clk is clk
--operation mode is input

clk = INPUT();


--reset is reset
--operation mode is input

reset = INPUT();


--data_in_0[0] is data_in_0[0]
--operation mode is input

data_in_0[0] = INPUT();


--data_in_0[1] is data_in_0[1]
--operation mode is input

data_in_0[1] = INPUT();


--data_in_0[2] is data_in_0[2]
--operation mode is input

data_in_0[2] = INPUT();


--data_in_0[3] is data_in_0[3]
--operation mode is input

data_in_0[3] = INPUT();


--data_in_0[4] is data_in_0[4]
--operation mode is input

data_in_0[4] = INPUT();


--data_in_0[5] is data_in_0[5]
--operation mode is input

data_in_0[5] = INPUT();


--data_in_0[6] is data_in_0[6]
--operation mode is input

data_in_0[6] = INPUT();


--data_in_0[7] is data_in_0[7]
--operation mode is input

data_in_0[7] = INPUT();


--data_in_1[0] is data_in_1[0]
--operation mode is input

data_in_1[0] = INPUT();


--data_in_1[1] is data_in_1[1]
--operation mode is input

data_in_1[1] = INPUT();


--data_in_1[2] is data_in_1[2]
--operation mode is input

data_in_1[2] = INPUT();


--data_in_1[3] is data_in_1[3]
--operation mode is input

data_in_1[3] = INPUT();


--data_in_1[4] is data_in_1[4]
--operation mode is input

data_in_1[4] = INPUT();


--data_in_1[5] is data_in_1[5]
--operation mode is input

data_in_1[5] = INPUT();


--data_in_1[6] is data_in_1[6]
--operation mode is input

data_in_1[6] = INPUT();


--data_in_1[7] is data_in_1[7]
--operation mode is input

data_in_1[7] = INPUT();


--data_in_2[0] is data_in_2[0]
--operation mode is input

data_in_2[0] = INPUT();


--data_in_2[1] is data_in_2[1]
--operation mode is input

data_in_2[1] = INPUT();


--data_in_2[2] is data_in_2[2]
--operation mode is input

data_in_2[2] = INPUT();


--data_in_2[3] is data_in_2[3]
--operation mode is input

data_in_2[3] = INPUT();


--data_in_2[4] is data_in_2[4]
--operation mode is input

data_in_2[4] = INPUT();


--data_in_2[5] is data_in_2[5]
--operation mode is input

data_in_2[5] = INPUT();


--data_in_2[6] is data_in_2[6]
--operation mode is input

data_in_2[6] = INPUT();


--data_in_2[7] is data_in_2[7]
--operation mode is input

data_in_2[7] = INPUT();


--data_in_3[0] is data_in_3[0]
--operation mode is input

data_in_3[0] = INPUT();


--data_in_3[1] is data_in_3[1]
--operation mode is input

data_in_3[1] = INPUT();


--data_in_3[2] is data_in_3[2]
--operation mode is input

data_in_3[2] = INPUT();


--data_in_3[3] is data_in_3[3]
--operation mode is input

data_in_3[3] = INPUT();


--data_in_3[4] is data_in_3[4]
--operation mode is input

data_in_3[4] = INPUT();


--data_in_3[5] is data_in_3[5]
--operation mode is input

data_in_3[5] = INPUT();


--data_in_3[6] is data_in_3[6]
--operation mode is input

data_in_3[6] = INPUT();


--data_in_3[7] is data_in_3[7]
--operation mode is input

data_in_3[7] = INPUT();


--done is done
--operation mode is output

done = OUTPUT(A1L591Q);


--data_out_0[0] is data_out_0[0]
--operation mode is output

data_out_0[0] = OUTPUT(A1L821Q);


--data_out_0[1] is data_out_0[1]
--operation mode is output

data_out_0[1] = OUTPUT(A1L031Q);


--data_out_0[2] is data_out_0[2]
--operation mode is output

data_out_0[2] = OUTPUT(A1L231Q);


--data_out_0[3] is data_out_0[3]
--operation mode is output

data_out_0[3] = OUTPUT(A1L431Q);


--data_out_0[4] is data_out_0[4]
--operation mode is output

data_out_0[4] = OUTPUT(A1L631Q);


--data_out_0[5] is data_out_0[5]
--operation mode is output

data_out_0[5] = OUTPUT(A1L831Q);


--data_out_0[6] is data_out_0[6]
--operation mode is output

data_out_0[6] = OUTPUT(A1L041Q);


--data_out_0[7] is data_out_0[7]
--operation mode is output

data_out_0[7] = OUTPUT(A1L241Q);


--data_out_1[0] is data_out_1[0]
--operation mode is output

data_out_1[0] = OUTPUT(A1L541Q);


--data_out_1[1] is data_out_1[1]
--operation mode is output

data_out_1[1] = OUTPUT(A1L741Q);


--data_out_1[2] is data_out_1[2]
--operation mode is output

data_out_1[2] = OUTPUT(A1L941Q);


--data_out_1[3] is data_out_1[3]
--operation mode is output

data_out_1[3] = OUTPUT(A1L151Q);


--data_out_1[4] is data_out_1[4]
--operation mode is output

data_out_1[4] = OUTPUT(A1L351Q);


--data_out_1[5] is data_out_1[5]
--operation mode is output

data_out_1[5] = OUTPUT(A1L551Q);


--data_out_1[6] is data_out_1[6]
--operation mode is output

data_out_1[6] = OUTPUT(A1L751Q);


--data_out_1[7] is data_out_1[7]
--operation mode is output

data_out_1[7] = OUTPUT(A1L951Q);


--data_out_2[0] is data_out_2[0]
--operation mode is output

data_out_2[0] = OUTPUT(A1L261Q);


--data_out_2[1] is data_out_2[1]
--operation mode is output

data_out_2[1] = OUTPUT(A1L461Q);


--data_out_2[2] is data_out_2[2]
--operation mode is output

data_out_2[2] = OUTPUT(A1L661Q);


--data_out_2[3] is data_out_2[3]
--operation mode is output

data_out_2[3] = OUTPUT(A1L861Q);


--data_out_2[4] is data_out_2[4]
--operation mode is output

data_out_2[4] = OUTPUT(A1L071Q);


--data_out_2[5] is data_out_2[5]
--operation mode is output

data_out_2[5] = OUTPUT(A1L271Q);


--data_out_2[6] is data_out_2[6]
--operation mode is output

data_out_2[6] = OUTPUT(A1L471Q);


--data_out_2[7] is data_out_2[7]
--operation mode is output

data_out_2[7] = OUTPUT(A1L671Q);


--data_out_3[0] is data_out_3[0]
--operation mode is output

data_out_3[0] = OUTPUT(A1L971Q);


--data_out_3[1] is data_out_3[1]
--operation mode is output

data_out_3[1] = OUTPUT(A1L181Q);


--data_out_3[2] is data_out_3[2]
--operation mode is output

data_out_3[2] = OUTPUT(A1L381Q);


--data_out_3[3] is data_out_3[3]
--operation mode is output

data_out_3[3] = OUTPUT(A1L581Q);


--data_out_3[4] is data_out_3[4]
--operation mode is output

data_out_3[4] = OUTPUT(A1L781Q);


--data_out_3[5] is data_out_3[5]
--operation mode is output

data_out_3[5] = OUTPUT(A1L981Q);


--data_out_3[6] is data_out_3[6]
--operation mode is output

data_out_3[6] = OUTPUT(A1L191Q);


--data_out_3[7] is data_out_3[7]
--operation mode is output

data_out_3[7] = OUTPUT(A1L391Q);


--state[0] is state[0]
--operation mode is bidir

state[0]_tri_out = TRI(A1L722Q, VCC);
state[0] = BIDIR(state[0]_tri_out);


--state[1] is state[1]
--operation mode is bidir

state[1]_tri_out = TRI(A1L922Q, VCC);
state[1] = BIDIR(state[1]_tri_out);


--state[2] is state[2]
--operation mode is bidir

state[2]_tri_out = TRI(A1L132Q, VCC);
state[2] = BIDIR(state[2]_tri_out);


