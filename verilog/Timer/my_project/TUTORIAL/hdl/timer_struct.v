//
// Module TUTORIAL.Timer.struct
//
// Created:
//          by - User.UNKNOWN (VBOX)
//          at - 01:29:40 20.05.2021
//
// Generated by Mentor Graphics' HDL Designer(TM) 2005.3 (Build 75)
//

`resetall
`timescale 1ns/10ps
module Timer( 
   clk, 
   d, 
   reset, 
   start, 
   stop, 
   alarm, 
   high, 
   low
);


// Internal Declarations

input        clk;
input  [9:0] d;
input        reset;
input        start;
input        stop;
output       alarm;
output [3:0] high;
output [3:0] low;


wire        clk;
wire [9:0]  d;
wire        reset;
wire        start;
wire        stop;
wire        alarm;
wire [3:0]  high;
wire [3:0]  low;

// Local declarations
reg[3:0] d_out;


// Non hierarchical truthtable declarations
 


// Internal signal declarations
wire       beep;
wire       clear;
wire [3:0] dat_in;
wire       hold;
wire       load;
wire       zero;


// Instances 
Control I0( 
   .clk   (clk), 
   .d     (d), 
   .reset (reset), 
   .start (start), 
   .stop  (stop), 
   .zero  (zero), 
   .beep  (beep), 
   .clear (clear), 
   .hold  (hold), 
   .load  (load)
); 

Counter I1( 
   .clear  (clear), 
   .clk    (clk), 
   .dat_in (dat_in), 
   .hold   (hold), 
   .load   (load), 
   .high   (high), 
   .low    (low), 
   .zero   (zero)
); 

// HDL Embedded Block 1 DtoB
// Non hierarchical truthtable
/////////////////////////////////////////////////////////////////
always @ (d) begin : dtob_truth_table_block_proc

   // Block 1
   if ((d[0] == 1))
      d_out = 0000;
   else if ((d[1] == 1))
      d_out = 0001;
   else if ((d[2] == 1))
      d_out = 0010;
   else if ((d[3] == 1))
      d_out = 0011;
   else if ((d[4] == 1))
      d_out = 0100;
   else if ((d[5] == 1))
      d_out = 0101;
   else if ((d[6] == 1))
      d_out = 0110;
   else if ((d[7] == 1))
      d_out = 0111;
   else if ((d[8] == 1))
      d_out = 1000;
   else if ((d[9] == 1))
      d_out = 1001;
   else
      d_out = 0000;
end

// Concurrent statements
 assign dat_in = d_out;

// HDL Embedded Text Block 2 OR1
// OR1 2        assign alarm = hold | beep                               

endmodule // Timer

