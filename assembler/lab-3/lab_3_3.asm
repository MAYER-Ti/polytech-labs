.model small
.stack 100h

.data 
A DW 123, 321, 234, 345, 456, 567, 678, 789, 890, 999
B DW 10 DUP(0) 

.code
start:
    ; Для чтения A и B
    mov ax, @data
    mov ds, ax
    mov es, ax

    ; Перемещение из A в B
    lea si, A
    lea di, B
    mov cx, 10
    rep movsw

    ; Взять адрес B в si
    lea si, B
    ; 10 элементов B надо пройти
    mov cx, 10

print_number:
    ; Записать первое число (2 байта) в ax
    mov ax, [si]   
    ; Обнулить регистр для остатка от деления 
    mov dx, 0       
    ; Записать делитель в bx
    mov bx, 10

    ; записать в стек счетчик по B
    push cx   
    ; обнулить счетчик
    mov cx, 0 

extract_digits:
    ; Обнулить регистр для остатка от деления 
    mov dx, 0  
    ; деление ax на bx, 
    ; остаток от деления записать в dx,
    ; результат от деления записать в ax
    div bx   
    ; Записать в стек младший разряд из числа       
    push dx   
    ; Посчитать количество цифр в числе      
    inc cx   
    ; проверить целую часть от деления на 0       
    cmp ax, 0     
    jne extract_digits

print_digits:
    ; Достать цифру из стека
    pop dx            
    ; Перевести в ASCII
    add dl, 30h
    ; Вызов функции DOS для вывода dl
    mov ah, 02h   
    ; Прерывание для выполнения операции в ah  
    int 21h         
    loop print_digits

    ; достать счетчик массива из стека
    pop cx

    ; записать в dl пробел в ASCII
    mov dl, 20h
    ; Вызов функции DOS для вывода dl
    mov ah, 02h
    ; Прерывание для выполнения операции в ah
    int 21h

    ; следующий элемент B (через два байта)
    add si, 2
    loop print_number

    ; записать указание на функцию DOS, которая выводит один символ из dl
    mov ah, 02h
    ; записать символ переноса каретки в начало строки
    mov dl, 0Dh
    ; Прерывание для выполнения операции в ah
    int 21h
    ; записать символ новой строки
    mov dl, 0Ah 
    ; Прерывание для выполнения операции в ah
    int 21h

    ; Завершение программы
    mov ah, 4Ch
    int 21h
end start
    