import subprocess

# –û—Å–Ω–æ–≤–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –∑–∞—Ö–≤–∞—Ç–∞ —Å –∫–∞–º–µ—Ä—ã
ffmpeg_cmd = [
    "ffmpeg",
    "-f", "dshow",
    "-video_size", "640x480",
    "-i", "video=HD 720P webcam",
    "-filter_complex",
    # –†–∞–∑–¥–µ–ª—è–µ–º –ø–æ—Ç–æ–∫ –Ω–∞ 4 –∫–æ–ø–∏–∏
    "[0:v]split=4[original][hue][cold][vintage];"
    
    # 1. –û—Ä–∏–≥–∏–Ω–∞–ª (–≤–µ—Ä—Ö–Ω–∏–π –ª–µ–≤—ã–π)
    "[original]crop=iw/2:ih/2:0:0[orig];"
        
    # 2. –¢–µ–ø–ª—ã–π —Ñ–∏–ª—å—Ç—Ä (–≤–µ—Ä—Ö–Ω–∏–π –ø—Ä–∞–≤—ã–π)
    "[hue]crop=iw/2:ih/2:ow:0,"
    "hue=s=1.5:h=10[hot];"
        
    # 3. –•–æ–ª–æ–¥–Ω—ã–π —Ñ–∏–ª—å—Ç—Ä (–Ω–∏–∂–Ω–∏–π –ª–µ–≤—ã–π)
     "[cold]crop=iw/2:ih/2:0:oh,"
    "colorbalance=rs=-0.3:bs=0.3[cold];"
        
    # 4. –°–µ–ø–∏—è (–Ω–∏–∂–Ω–∏–π –ø—Ä–∞–≤—ã–π)
    "[vintage]crop=iw/2:ih/2:ow:oh,"
    "colorchannelmixer=.393:.769:.189:0:.349:.686:.168:0:.272:.534:.131[vintage];"
        
    # –°–æ–±–∏—Ä–∞–µ–º –º–æ–∑–∞–∏–∫—É 2x2
    "[orig][hot]hstack[top];"
    "[cold][vintage]hstack[bottom];"
    "[top][bottom]vstack[out]",
        
    "-map", "[out]",
    "-f", "nut",
     "-c:v", "rawvideo",
    "-"
 ]

    # –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
ffplay_cmd = [
    "ffplay",
    "-window_title", "4-—Ö –∫–∞–Ω–∞–ª—å–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä",
    "-vf", "setpts=0",
    "-"
]

    # –ó–∞–ø—É—Å–∫ FFmpeg –∏ –ø–µ—Ä–µ–¥–∞—á–∞ –≤ FFplay
ffmpeg_proc = subprocess.Popen(ffmpeg_cmd, stdout=subprocess.PIPE, stderr=subprocess.DEVNULL)
ffplay_proc = subprocess.Popen(ffplay_cmd, stdin=ffmpeg_proc.stdout)

# –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
ffplay_proc.wait()
ffmpeg_proc.wait()

# #!/usr/bin/env python3
# import subprocess
# import sys
# import time
# from datetime import datetime

# def show_single_webcam():
#     """–ü—Ä–æ—Å–º–æ—Ç—Ä –≤–µ–±-–∫–∞–º–µ—Ä—ã —Å –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–π –∑–∞–¥–µ—Ä–∂–∫–æ–π"""
#     cmd = [
#         "ffplay",
#         "-f", "dshow",
#         "-video_size", "640x480",
#         "-framerate", "30",
#         "-fflags", "nobuffer",
#         "-flags", "low_delay",
#         "-probesize", "32",
#         "-analyzeduration", "0",
#         "-i", "video=HD 720P webcam",
#         "-window_title", "–í–µ–±-–∫–∞–º–µ—Ä–∞"
#     ]
#     try:
#         subprocess.run(cmd, check=True)
#     except Exception as e:
#         print(f"‚ùå –û—à–∏–±–∫–∞: {e}", file=sys.stderr)

# def record_screen_with_webcam(output_file, duration=10):
#     """–ó–∞–ø–∏—Å—å —ç–∫—Ä–∞–Ω–∞ —Å —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–µ–π"""
#     cmd = [
#         "ffmpeg",
#         # 1. –ó–∞—Ö–≤–∞—Ç —ç–∫—Ä–∞–Ω–∞ (–æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–æ –¥–ª—è 60 FPS)
#         "-f", "gdigrab",
#         "-framerate", "60",
#         "-thread_queue_size", "1024",
#         "-probesize", "32",
#         "-analyzeduration", "0",
#         "-video_size", "1920x1080",
#         "-use_wallclock_as_timestamps", "1",  # –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–∏—Å—Ç–µ–º–Ω–æ–µ –≤—Ä–µ–º—è
#         "-i", "desktop",
        
#         # 2. –ó–∞—Ö–≤–∞—Ç –∫–∞–º–µ—Ä—ã (–æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–æ –¥–ª—è 30 FPS)
#         "-f", "dshow",
#         "-video_size", "640x480",
#         "-framerate", "30",
#         "-thread_queue_size", "1024",
#         "-fflags", "nobuffer",
#         "-use_wallclock_as_timestamps", "1",  # –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–∏—Å—Ç–µ–º–Ω–æ–µ –≤—Ä–µ–º—è
#         "-flags", "low_delay",
#         "-i", "video=HD 720P webcam",
        
#         # 3. –ó–∞—Ö–≤–∞—Ç –º–∏–∫—Ä–æ—Ñ–æ–Ω–∞
#         "-f", "dshow",
#         "-audio_buffer_size", "50",
#         "-i", "audio=–ú–∏–∫—Ä–æ—Ñ–æ–Ω (5- Fifine Microphone)",
        
#         # 4. –§–∏–ª—å—Ç—Ä—ã —Å –∫–æ—Ä—Ä–µ–∫—Ü–∏–µ–π –∑–∞–¥–µ—Ä–∂–∫–∏
#         "-filter_complex",
#         "[0:v]setpts=N/FRAME_RATE/TB[scr];"
#         "[1:v]setpts=N/FRAME_RATE/TB[cam];"
#         "[cam]scale=320:-1[cam_scaled];"
#         "[scr][cam_scaled]overlay=x=main_w-overlay_w-10:y=10[v]",
        
#         # 5. –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏—è
#         "-map", "[v]",
#         "-map", "2:a",
#         "-c:v", "libx264",
#         "-preset", "ultrafast",
#         "-tune", "zerolatency",
#         "-crf", "23",
#         "-g", "60",
#         "-r", "60",
#         "-c:a", "aac",
#         "-b:a", "128k",
#         "-vsync", "1",
#         "-t", str(duration),
#         "-y",
#         output_file
#     ]
    
#     try:
#         print(f"‚è∫ –ù–∞—á–∞—Ç–∞ –∑–∞–ø–∏—Å—å...")
#         start_time = time.time()
#         subprocess.run(cmd, check=True)
#         end_time = time.time()
#         print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ –∑–∞–ø–∏—Å–∞–Ω–æ –∑–∞ {end_time-start_time:.1f} —Å–µ–∫")
#     except Exception as e:
#         print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø–∏—Å–∏: {str(e)[:100]}", file=sys.stderr)

# def reverse_and_rotate_video(input_file, output_file):
#     """–†–µ–≤–µ—Ä—Å –∏ –ø–æ–≤–æ—Ä–æ—Ç –≤–∏–¥–µ–æ"""
#     cmd = [
#         "ffmpeg",
#         "-i", input_file,
#         "-vf", "transpose=1,reverse",
#         "-af", "areverse",
#         "-preset", "fast",
#         "-y",
#         output_file
#     ]
#     try:
#         print("üîÑ –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–∏–¥–µ–æ...")
#         subprocess.run(cmd, check=True)
#         print(f"‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç —Å–æ—Ö—Ä–∞–Ω—ë–Ω –∫–∞–∫ {output_file}")
#     except Exception as e:
#         print(f"‚ùå –û—à–∏–±–∫–∞: {str(e)[:100]}", file=sys.stderr)

# def main_menu():
#     """–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
#     while True:
#         print("\n" + "="*50)
#         print(" FFmpeg Dual-Recorder ".center(50))
#         print("="*50)
#         print("1. –ü—Ä–æ—Å–º–æ—Ç—Ä –∫–∞–º–µ—Ä—ã")
#         print("2. –ó–∞–ø–∏—Å—å —ç–∫—Ä–∞–Ω–∞ + –∫–∞–º–µ—Ä—ã")
#         print("3. –†–µ–≤–µ—Ä—Å –≤–∏–¥–µ–æ")
#         print("4. –í—ã—Ö–æ–¥")
        
#         choice = input("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ (1-4): ").strip()
        
#         if choice == "1":
#             show_single_webcam()
#         elif choice == "2":
#             duration = int(input("–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∑–∞–ø–∏—Å–∏ (—Å–µ–∫—É–Ω–¥): "))
#             output_file = f"input.mp4"
#             record_screen_with_webcam(output_file, duration)
#         elif choice == "3":
#             input_file = "input.mp4"
#             output_file = f"reversed_input.mp4"
#             reverse_and_rotate_video(input_file, output_file)
#         elif choice == "4":
#             print("–ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã...")
#             break
#         else:
#             print("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥!")

# if __name__ == "__main__":
#     main_menu()