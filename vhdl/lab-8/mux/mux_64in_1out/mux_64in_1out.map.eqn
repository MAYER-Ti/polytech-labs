-- Copyright (C) 1991-2005 Altera Corporation
-- Your use of Altera Corporation's design tools, logic functions 
-- and other software and tools, and its AMPP partner logic 
-- functions, and any output files any of the foregoing 
-- (including device programming or simulation files), and any 
-- associated documentation or information are expressly subject 
-- to the terms and conditions of the Altera Program License 
-- Subscription Agreement, Altera MegaCore Function License 
-- Agreement, or other applicable license agreement, including, 
-- without limitation, that your use is for the sole purpose of 
-- programming logic devices manufactured by Altera and sold by 
-- Altera or its authorized distributors.  Please refer to the 
-- applicable agreement for further details.
--B6L1 is mux_4in_1out:inst6|inst4~19
--operation mode is normal

B6L1 = a0 & (a1) # !a0 & (a1 & !x22 # !a1 & (!x20));


--B6L2 is mux_4in_1out:inst6|inst4~20
--operation mode is normal

B6L2 = a0 & (B6L1 & (!x23) # !B6L1 & !x21) # !a0 & (B6L1);


--B7L1 is mux_4in_1out:inst7|inst4~19
--operation mode is normal

B7L1 = a1 & (a0) # !a1 & (a0 & !x25 # !a0 & (!x24));


--B7L2 is mux_4in_1out:inst7|inst4~20
--operation mode is normal

B7L2 = a1 & (B7L1 & (!x27) # !B7L1 & !x26) # !a1 & (B7L1);


--B5L1 is mux_4in_1out:inst5|inst4~19
--operation mode is normal

B5L1 = a0 & (a1) # !a0 & (a1 & !x18 # !a1 & (!x16));


--B5L2 is mux_4in_1out:inst5|inst4~20
--operation mode is normal

B5L2 = a0 & (B5L1 & (!x19) # !B5L1 & !x17) # !a0 & (B5L1);


--B01L1 is mux_4in_1out:inst10|inst4~6
--operation mode is normal

B01L1 = a2 & (a3) # !a2 & (a3 & !B7L2 # !a3 & (!B5L2));


--B8L1 is mux_4in_1out:inst8|inst4~19
--operation mode is normal

B8L1 = a1 & (a0) # !a1 & (a0 & !x29 # !a0 & (!x28));


--B8L2 is mux_4in_1out:inst8|inst4~20
--operation mode is normal

B8L2 = a1 & (B8L1 & (!x31) # !B8L1 & !x30) # !a1 & (B8L1);


--B01L2 is mux_4in_1out:inst10|inst4~7
--operation mode is normal

B01L2 = a2 & (B01L1 & (!B8L2) # !B01L1 & !B6L2) # !a2 & (B01L1);


--B31L1 is mux_4in_1out:inst13|inst4~19
--operation mode is normal

B31L1 = a1 & (a0) # !a1 & (a0 & !x41 # !a0 & (!x40));


--B31L2 is mux_4in_1out:inst13|inst4~20
--operation mode is normal

B31L2 = a1 & (B31L1 & (!x43) # !B31L1 & !x42) # !a1 & (B31L1);


--B21L1 is mux_4in_1out:inst12|inst4~19
--operation mode is normal

B21L1 = a0 & (a1) # !a0 & (a1 & !x38 # !a1 & (!x36));


--B21L2 is mux_4in_1out:inst12|inst4~20
--operation mode is normal

B21L2 = a0 & (B21L1 & (!x39) # !B21L1 & !x37) # !a0 & (B21L1);


--B11L1 is mux_4in_1out:inst11|inst4~19
--operation mode is normal

B11L1 = a0 & (a1) # !a0 & (a1 & !x34 # !a1 & (!x32));


--B11L2 is mux_4in_1out:inst11|inst4~20
--operation mode is normal

B11L2 = a0 & (B11L1 & (!x35) # !B11L1 & !x33) # !a0 & (B11L1);


--B91L1 is mux_4in_1out:inst19|inst4~6
--operation mode is normal

B91L1 = a3 & (a2) # !a3 & (a2 & !B21L2 # !a2 & (!B11L2));


--B41L1 is mux_4in_1out:inst14|inst4~19
--operation mode is normal

B41L1 = a1 & (a0) # !a1 & (a0 & !x45 # !a0 & (!x44));


--B41L2 is mux_4in_1out:inst14|inst4~20
--operation mode is normal

B41L2 = a1 & (B41L1 & (!x47) # !B41L1 & !x46) # !a1 & (B41L1);


--B91L2 is mux_4in_1out:inst19|inst4~7
--operation mode is normal

B91L2 = a3 & (B91L1 & (!B41L2) # !B91L1 & !B31L2) # !a3 & (B91L1);


--B2L1 is mux_4in_1out:inst2|inst4~19
--operation mode is normal

B2L1 = a0 & (a1) # !a0 & (a1 & !x6 # !a1 & (!x4));


--B2L2 is mux_4in_1out:inst2|inst4~20
--operation mode is normal

B2L2 = a0 & (B2L1 & (!x7) # !B2L1 & !x5) # !a0 & (B2L1);


--B3L1 is mux_4in_1out:inst3|inst4~19
--operation mode is normal

B3L1 = a1 & (a0) # !a1 & (a0 & !x9 # !a0 & (!x8));


--B3L2 is mux_4in_1out:inst3|inst4~20
--operation mode is normal

B3L2 = a1 & (B3L1 & (!x11) # !B3L1 & !x10) # !a1 & (B3L1);


--B1L1 is mux_4in_1out:inst|inst4~19
--operation mode is normal

B1L1 = a0 & (a1) # !a0 & (a1 & !x2 # !a1 & (!x0));


--B1L2 is mux_4in_1out:inst|inst4~20
--operation mode is normal

B1L2 = a0 & (B1L1 & (!x3) # !B1L1 & !x1) # !a0 & (B1L1);


--B9L1 is mux_4in_1out:inst9|inst4~6
--operation mode is normal

B9L1 = a2 & (a3) # !a2 & (a3 & !B3L2 # !a3 & (!B1L2));


--B4L1 is mux_4in_1out:inst4|inst4~19
--operation mode is normal

B4L1 = a1 & (a0) # !a1 & (a0 & !x13 # !a0 & (!x12));


--B4L2 is mux_4in_1out:inst4|inst4~20
--operation mode is normal

B4L2 = a1 & (B4L1 & (!x15) # !B4L1 & !x14) # !a1 & (B4L1);


--B9L2 is mux_4in_1out:inst9|inst4~7
--operation mode is normal

B9L2 = a2 & (B9L1 & (!B4L2) # !B9L1 & !B2L2) # !a2 & (B9L1);


--B12L1 is mux_4in_1out:inst21|inst4~6
--operation mode is normal

B12L1 = a4 & (a5) # !a4 & (a5 & !B91L2 # !a5 & (!B9L2));


--B71L1 is mux_4in_1out:inst17|inst4~19
--operation mode is normal

B71L1 = a1 & (a0) # !a1 & (a0 & !x57 # !a0 & (!x56));


--B71L2 is mux_4in_1out:inst17|inst4~20
--operation mode is normal

B71L2 = a1 & (B71L1 & (!x59) # !B71L1 & !x58) # !a1 & (B71L1);


--B61L1 is mux_4in_1out:inst16|inst4~19
--operation mode is normal

B61L1 = a0 & (a1) # !a0 & (a1 & !x54 # !a1 & (!x52));


--B61L2 is mux_4in_1out:inst16|inst4~20
--operation mode is normal

B61L2 = a0 & (B61L1 & (!x55) # !B61L1 & !x53) # !a0 & (B61L1);


--B51L1 is mux_4in_1out:inst15|inst4~19
--operation mode is normal

B51L1 = a0 & (a1) # !a0 & (a1 & !x50 # !a1 & (!x48));


--B51L2 is mux_4in_1out:inst15|inst4~20
--operation mode is normal

B51L2 = a0 & (B51L1 & (!x51) # !B51L1 & !x49) # !a0 & (B51L1);


--B02L1 is mux_4in_1out:inst20|inst4~6
--operation mode is normal

B02L1 = a3 & (a2) # !a3 & (a2 & !B61L2 # !a2 & (!B51L2));


--B81L1 is mux_4in_1out:inst18|inst4~19
--operation mode is normal

B81L1 = a1 & (a0) # !a1 & (a0 & !x61 # !a0 & (!x60));


--B81L2 is mux_4in_1out:inst18|inst4~20
--operation mode is normal

B81L2 = a1 & (B81L1 & (!x63) # !B81L1 & !x62) # !a1 & (B81L1);


--B02L2 is mux_4in_1out:inst20|inst4~7
--operation mode is normal

B02L2 = a3 & (B02L1 & (!B81L2) # !B02L1 & !B71L2) # !a3 & (B02L1);


--B12L2 is mux_4in_1out:inst21|inst4~7
--operation mode is normal

B12L2 = a4 & (B12L1 & (!B02L2) # !B12L1 & !B01L2) # !a4 & (B12L1);


--B12_inst5 is mux_4in_1out:inst21|inst5
--operation mode is normal

B12_inst5 = EN & (!B12L2);


--EN is EN
--operation mode is input

EN = INPUT();


--x21 is x21
--operation mode is input

x21 = INPUT();


--a0 is a0
--operation mode is input

a0 = INPUT();


--x22 is x22
--operation mode is input

x22 = INPUT();


--a1 is a1
--operation mode is input

a1 = INPUT();


--x20 is x20
--operation mode is input

x20 = INPUT();


--x23 is x23
--operation mode is input

x23 = INPUT();


--a2 is a2
--operation mode is input

a2 = INPUT();


--x26 is x26
--operation mode is input

x26 = INPUT();


--x25 is x25
--operation mode is input

x25 = INPUT();


--x24 is x24
--operation mode is input

x24 = INPUT();


--x27 is x27
--operation mode is input

x27 = INPUT();


--a3 is a3
--operation mode is input

a3 = INPUT();


--x17 is x17
--operation mode is input

x17 = INPUT();


--x18 is x18
--operation mode is input

x18 = INPUT();


--x16 is x16
--operation mode is input

x16 = INPUT();


--x19 is x19
--operation mode is input

x19 = INPUT();


--x30 is x30
--operation mode is input

x30 = INPUT();


--x29 is x29
--operation mode is input

x29 = INPUT();


--x28 is x28
--operation mode is input

x28 = INPUT();


--x31 is x31
--operation mode is input

x31 = INPUT();


--a4 is a4
--operation mode is input

a4 = INPUT();


--x42 is x42
--operation mode is input

x42 = INPUT();


--x41 is x41
--operation mode is input

x41 = INPUT();


--x40 is x40
--operation mode is input

x40 = INPUT();


--x43 is x43
--operation mode is input

x43 = INPUT();


--x37 is x37
--operation mode is input

x37 = INPUT();


--x38 is x38
--operation mode is input

x38 = INPUT();


--x36 is x36
--operation mode is input

x36 = INPUT();


--x39 is x39
--operation mode is input

x39 = INPUT();


--x33 is x33
--operation mode is input

x33 = INPUT();


--x34 is x34
--operation mode is input

x34 = INPUT();


--x32 is x32
--operation mode is input

x32 = INPUT();


--x35 is x35
--operation mode is input

x35 = INPUT();


--x46 is x46
--operation mode is input

x46 = INPUT();


--x45 is x45
--operation mode is input

x45 = INPUT();


--x44 is x44
--operation mode is input

x44 = INPUT();


--x47 is x47
--operation mode is input

x47 = INPUT();


--a5 is a5
--operation mode is input

a5 = INPUT();


--x5 is x5
--operation mode is input

x5 = INPUT();


--x6 is x6
--operation mode is input

x6 = INPUT();


--x4 is x4
--operation mode is input

x4 = INPUT();


--x7 is x7
--operation mode is input

x7 = INPUT();


--x10 is x10
--operation mode is input

x10 = INPUT();


--x9 is x9
--operation mode is input

x9 = INPUT();


--x8 is x8
--operation mode is input

x8 = INPUT();


--x11 is x11
--operation mode is input

x11 = INPUT();


--x1 is x1
--operation mode is input

x1 = INPUT();


--x2 is x2
--operation mode is input

x2 = INPUT();


--x0 is x0
--operation mode is input

x0 = INPUT();


--x3 is x3
--operation mode is input

x3 = INPUT();


--x14 is x14
--operation mode is input

x14 = INPUT();


--x13 is x13
--operation mode is input

x13 = INPUT();


--x12 is x12
--operation mode is input

x12 = INPUT();


--x15 is x15
--operation mode is input

x15 = INPUT();


--x58 is x58
--operation mode is input

x58 = INPUT();


--x57 is x57
--operation mode is input

x57 = INPUT();


--x56 is x56
--operation mode is input

x56 = INPUT();


--x59 is x59
--operation mode is input

x59 = INPUT();


--x53 is x53
--operation mode is input

x53 = INPUT();


--x54 is x54
--operation mode is input

x54 = INPUT();


--x52 is x52
--operation mode is input

x52 = INPUT();


--x55 is x55
--operation mode is input

x55 = INPUT();


--x49 is x49
--operation mode is input

x49 = INPUT();


--x50 is x50
--operation mode is input

x50 = INPUT();


--x48 is x48
--operation mode is input

x48 = INPUT();


--x51 is x51
--operation mode is input

x51 = INPUT();


--x62 is x62
--operation mode is input

x62 = INPUT();


--x61 is x61
--operation mode is input

x61 = INPUT();


--x60 is x60
--operation mode is input

x60 = INPUT();


--x63 is x63
--operation mode is input

x63 = INPUT();


--res is res
--operation mode is output

res = OUTPUT(!B12_inst5);


